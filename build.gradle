buildscript {
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "idea"
apply plugin: 'com.github.johnrengelman.shadow'
sourceCompatibility = 11
targetCompatibility = 11



tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    junitVersion = "5.6.2"
    commonsLang3Version = "3.10"
    lombokVersion = "1.18.12"
    jacksonVersion = "2.9.8"
    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
    mavenCentral()
}

test {
    useJUnitPlatform()
}

//配置依赖
dependencies {
    compile(
            // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
            "org.apache.commons:commons-lang3:${commonsLang3Version}",
            "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
            "org.projectlombok:lombok:${lombokVersion}",
            // https://mvnrepository.com/artifact/commons-codec/commons-codec
            'commons-codec:commons-codec:1.9'
    )
    testCompile(
            // junit
            "org.junit.jupiter:junit-jupiter-engine:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
    )
    annotationProcessor(
            // https://mvnrepository.com/artifact/org.projectlombok/lombok
            "org.projectlombok:lombok:${lombokVersion}"
    )
    testAnnotationProcessor(
            "org.projectlombok:lombok:$lombokVersion"
    )
}

shadowJar {
    classifier = null
    version = null
    manifest {
        attributes(
                'Main-Class': 'com.none.signature.SignatureGen'
        )
    }
    dependencies {
    }
    from("./"){
        include 'build.gradle'
    }
}